--테이블 속성 변경
--형식)ALTER TABLE 테이블명 변경옵션
--변경옵션에 의해 테이블 속성에 대한 추가,삭제,변경 및 제약조건에 대한 추가,삭제 가능

--USER1 테이블 생성 - 회원번호(숫자형),회원이름(문자형),전화번호(문자형)
CREATE TABLE USER1(NO NUMBER(4),NAME VARCHAR2(20),PHONE VARCHAR2(15));
DESC USER1;

--USER1 테이블에 행 삽입
INSERT INTO USER1 VALUES(1000,'홍길동','010-1234-5678');
SELECT * FROM USER1;
COMMIT;

--테이블 속성 추가 - 컬럼 기본값 및 컬럼 수준의 제약조건 설정 가능
--형식)ALTER TABLE 테이블명 ADD(컬럼명 자료형[(크기)] [DEFAULT 기본값] [제약조건]);

--USER1 테이블에 주소(문자형) 속성 추가
--테이블에 행이 저장되어 있어도 테이블 속성 추가 가능 - 기존 저장행의 추가된 속성에는 컬럼 기본값이 자동 저장
ALTER TABLE USER1 ADD(ADDRESS VARCHAR2(100));
DESC USER1;
SELECT * FROM USER1;

--USER1 테이블에서 저장행의 ADDRESS 컬럼값 변경
UPDATE USER1 SET ADDRESS='서울시 강남구' WHERE NO=1000;
SELECT * FROM USER1;
COMMIT;

--테이블의 컬럼 자료형과 크기 변경 - 컬럼 기본값 및 컬럼 수준의 제약조건 설정 가능
--형식)ALTER TABLE 테이블명 MODIFY(컬럼명 자료형[(크기)] [DEFAULT 기본값] [제약조건])

--USER1 테이블 초기화
TRUNCATE TABLE USER1;
SELECT * FROM USER1;

--USER1 테이블의 NO 컬럼의 자료형(숫자형)을 문자형으로 변경
DESC USER1;
ALTER TABLE USER1 MODIFY(NO VARCHAR2(4));
DESC USER1;

--USER1 테이블에 행 삽입
INSERT INTO USER1 VALUES('1000','홍길동','010-1234-5678','서울시 강남구');
SELECT * FROM USER1;
COMMIT;

--USER1 테이블의 NO 컬럼의 자료형(문자형)을 숫자형으로 변경
--변경 컬럼에 값이 저장되어 있는 경우 컬럼 자료형 변경하면 에러 발생
ALTER TABLE USER1 MODIFY(NO NUMBER(4));--에러

--USER1 테이블의 NAME 컬럼 크기(20BYTE)를 10BYTE로 변경
--변경 컬럼이 값이 저장되어 있는 경우 저장된 컬럼값보다 변경할 컬럼의 크기가 큰 경우 컬럼 크기 변경 가능
ALTER TABLE USER1 MODIFY(NAME VARCHAR2(10));
DESC USER1;

--USER1 테이블의 NAME 컬럼 크기(10BYTE)를 5BYTE로 변경
--변경 컬럼이 값이 저장되어 있는 경우 저장된 컬럼값보다 변경할 컬럼의 크기가 작은 경우 에러 발생
ALTER TABLE USER1 MODIFY(NAME VARCHAR2(5));--에러

--테이블의 컬럼명 변경
--형식)ALTER TABLE 테이블명 RENAME COLUMN 기존컬럼명 TO 변경컬럼명

--USER1 테이블의 ADDRESS 컬럼명을 ADDR 컬럼명으로 변경
ALTER TABLE USER1 RENAME COLUMN ADDRESS TO ADDR;
DESC USER1;

--테이블 속성 삭제 - 테이블 컬럼값도 같이 삭제
--형식)ALTER TABLE 테이블명 DROP COLUMN 컬럼명

--USER1 테이블에서 PHONE 컬럼 삭제
ALTER TABLE USER1 DROP COLUMN PHONE;
DESC USER1;
SELECT * FROM USER1;

--제약조건 추가 - 테이블 속성 추가(ADD) 및 테이블 속성 변경(MODIFY)시 컬럼 수준의 제약조건 추가 가능
--USER1 테이블의 NAME 컬럼에 NOT NULL 제약조건 추가
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE FROM USER_CONSTRAINTS WHERE TABLE_NAME='USER1';
ALTER TABLE USER1 MODIFY(NAME VARCHAR2(10) CONSTRAINT USER1_NAME_NN NOT NULL);
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE FROM USER_CONSTRAINTS WHERE TABLE_NAME='USER1';

--제약조건 추가 - 테이블 수준의 제약조건은 ADD 옵션을 사용하여 추가 가능
--형식)ALTER TABLE 테이블명 ADD [CONSTRAINT 제약조건명] 제약조건
--USER1 테이블의 NO 컬럼에 PRIMARY KEY 제약조건 추가
ALTER TABLE USER1 ADD CONSTRAINT USER1_NO_PK PRIMARY KEY(NO);
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE FROM USER_CONSTRAINTS WHERE TABLE_NAME='USER1';

--제약조건 삭제 - DROP 옵션을 사용하여 제약조건 삭제 가능
--형식)ALTER TABLE 테이블명 DROP {PRIMARY KEY|CONSTRAINT 제약조건명} [CASCADE]

--USER1 테이블의 NAME 컬럼에 설정된 NOT NULL 제약조건 삭제
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE FROM USER_CONSTRAINTS WHERE TABLE_NAME='USER1';
ALTER TABLE USER1 DROP CONSTRAINT USER1_NAME_NN;
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE FROM USER_CONSTRAINTS WHERE TABLE_NAME='USER1';

--USER1 테이블의 NO 컬럼에 설정된 PRIMARY KEY 제약조건 삭제
ALTER TABLE USER1 DROP PRIMARY KEY;--제약조건의 이름을 이용하여 삭제 가능
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE FROM USER_CONSTRAINTS WHERE TABLE_NAME='USER1';

--BUSEO 테이블 생성 - 부서번호(숫자형-PRIMARY KEY),부서이름(문자형) : 부모 테이블
CREATE TABLE BUSEO(BNO NUMBER(2) CONSTRAINT BUSEO_BNO_PK PRIMARY KEY,BNAME VARCHAR2(20));

--BUSEO 테이블에 행 삽입
INSERT INTO BUSEO VALUES(10,'총무부');
INSERT INTO BUSEO VALUES(20,'영업부');
SELECT * FROM BUSEO;
COMMIT;

--SAWON 테이블 - 사원번호(숫자형-PRIMARY KEY),사원이름(문자형),부서번호(숫자형-FOREIGN KEY:BUSEO 테이블의 BNO 컬럼 참조) : 자식 테이블
CREATE TABLE SAWON(SNO NUMBER(4) CONSTRAINT SAWON_SNO_PK PRIMARY KEY,SNAME VARCHAR2(20),BNO NUMBER(2)
    ,CONSTRAINT SAWON_BNO_FK FOREIGN KEY(BNO) REFERENCES BUSEO(BNO)); 
    
--SAWON 테이블에 행 삽입
INSERT INTO SAWON VALUES(1000,'홍길동',10);
INSERT INTO SAWON VALUES(2000,'임꺽정',20);
SELECT * FROM SAWON;
COMMIT;

--SAWON 테이블과 BUSEO 테이블의 제약조건 확인
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,R_CONSTRAINT_NAME FROM USER_CONSTRAINTS WHERE TABLE_NAME IN('BUSEO','SAWON');

--FOREIGN KEY 제약조건에 의해 부모 테이블의 참조 컬럼에 저장되어 있지 않은 값을 전달하여 삽입할 경우 에러 발생
INSERT INTO SAWON VALUES(3000,'전우치',30);--에러

--제약조건의 비활성화 - 컬럼에 설정된 제약조건을 일시적으로 중지하는 기능
--형식)ALTER TABLE 테이블명 DISABLE {PRIMARY KEY|CONSTRAINT 제약조건명} [CASCADE]

--SAWON 테이블의 BNO 컬럼에 설정된 FOREIGN KEY 제약조건 비활성화 처리
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,STATUS FROM USER_CONSTRAINTS WHERE TABLE_NAME='SAWON';
ALTER TABLE SAWON DISABLE CONSTRAINT SAWON_BNO_FK;
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,STATUS FROM USER_CONSTRAINTS WHERE TABLE_NAME='SAWON';

--SAWON 테이블에 행 삽입 - FOREIGN KEY 제약조건이 비활성화 처리 되었으므 제약조건을 위반하는 값을 전달해도 에러 미발생
INSERT INTO SAWON VALUES(3000,'전우치',30);
SELECT * FROM SAWON;
COMMIT;

--제약조건의 활성화 - 비활성화 처리된 제약조건을 다시 동작되도록 설정하는 기능
--형식)ALTER TABLE 테이블명 ENABLE {PRIMARY KEY|CONSTRAINT 제약조건명}

--SAWON 테이블의 BNO 컬럼에 설정된 FOREIGN KEY 제약조건 활성화 처리
--활성화 처리될 제약조건에 제약조건을 위반하는 컬럼값이 저장되어 있는 경우 활성화 처리 불가능
ALTER TABLE SAWON ENABLE CONSTRAINT SAWON_BNO_FK;--에러

--제약조건을 위반하는 컬럼값을 변경하거나 컬럼값이 저장된 행을 삭제해야만 제약조건 활성화 가능
SELECT * FROM SAWON;
DELETE FROM SAWON WHERE BNO=30;
SELECT * FROM SAWON;
COMMIT;
ALTER TABLE SAWON ENABLE CONSTRAINT SAWON_BNO_FK;
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,STATUS FROM USER_CONSTRAINTS WHERE TABLE_NAME='SAWON';

--BUSEO 테이블의 BNO 컬럼에 설정된 PRIMARY KEY 제약조건 비활성화 처리
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,STATUS FROM USER_CONSTRAINTS WHERE TABLE_NAME='BUSEO';
--FOREIGN KEY 제약조건에 의해 참조되는 부모 테이블의 PRIMARY KEY 제약조건은 비활성화 처리 불가능
ALTER TABLE BUSEO DISABLE PRIMARY KEY;--에러

--CASCADE 키워드를 사용하여 부모 테이블의 PRIMARY KEY 제약조건을 비활성화 처리하면 자식 테이블의 설정된 FOREIGN KEY 제약조건도 
--자동으로 비활성화 처리 가능
ALTER TABLE BUSEO DISABLE PRIMARY KEY CASCADE;
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,STATUS FROM USER_CONSTRAINTS WHERE TABLE_NAME IN ('BUSEO','SAWON');

--부모 테이블의 PRIMARY KEY 제약조건을 활성화 처리한 후 자식 테이블의 FOREIGN KEY 제약조건 활성화 처리 가능
ALTER TABLE BUSEO ENABLE PRIMARY KEY;
ALTER TABLE SAWON ENABLE CONSTRAINT SAWON_BNO_FK;
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,STATUS FROM USER_CONSTRAINTS WHERE TABLE_NAME IN ('BUSEO','SAWON');

--BUSEO 테이블의 BNO 컬럼에 설정된 PRIMARY KEY 제약조건 삭제
--FOREIGN KEY 제약조건에 의해 참조되는 부모 테이블의 PRIMARY KEY 제약조건은 삭제 불가능
ALTER TABLE BUSEO DROP PRIMARY KEY;--에러

--CASCADE 키워드를 사용하여 부모 테이블의 PRIMARY KEY 제약조건을 삭제하면 자식 테이블의 설정된 FOREIGN KEY 제약조건도 자동으로 삭제 처리 가능
ALTER TABLE BUSEO DROP PRIMARY KEY CASCADE;
SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE,STATUS FROM USER_CONSTRAINTS WHERE TABLE_NAME IN ('BUSEO','SAWON');